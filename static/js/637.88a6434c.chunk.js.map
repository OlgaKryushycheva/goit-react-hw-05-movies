{"version":3,"file":"static/js/637.88a6434c.chunk.js","mappings":"qLAEaA,E,OAAOC,GAAAA,GAAH,yC,yHCAJC,EAAOD,EAAAA,GAAAA,KAAH,8DAKJE,EAAQF,EAAAA,GAAAA,MAAH,qJ,SC+BlB,EAlCmB,WACjB,OAA4BG,EAAAA,EAAAA,MAAnBC,GAAT,eACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OACE,UAACN,EAAD,CAAMO,SAda,SAAAC,GACnBA,EAAIC,iBAEJ,IAAIC,EAAcF,EAAIG,OAAOC,SAASC,WAAWR,MAAMS,OACnC,KAAhBJ,GAIJP,EAAgB,CAAEY,MAAOL,IAEzBJ,EAAS,KALPH,EAAgB,CAAC,EAMpB,EAGC,WACE,SAACF,EAAD,CACEe,KAAK,OACLC,KAAK,aACLZ,MAAOA,EACPa,SAvBe,SAAAV,GACnBF,EAASE,EAAIG,OAAON,MAAMS,OAC3B,KAuBG,mBAAQE,KAAK,SAAb,SAAsB,aAG3B,E,kBCjBD,EAhB0B,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,UACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAxC,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,E,SCfYI,EAAO9B,EAAAA,GAAAA,IAAH,0CC4BjB,EAvBmB,WACjB,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeW,EAAf,KACA,GAAuB5B,EAAAA,EAAAA,MACjBa,GADN,eAC2BgB,IAAI,SAY/B,OAVAC,EAAAA,EAAAA,YAAU,WACHjB,IAELkB,EAAAA,EAAAA,IAAkBlB,GACfmB,MAAK,SAAAC,GACJL,EAAUK,EAAKC,QAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACvB,KAGF,UAACc,EAAD,YACE,SAAC,EAAD,IACCd,IAAS,SAAC,EAAD,CAAmBI,OAAQA,MAG1C,C,sJC5BD,IAAMsB,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,yDAAD,OAC+CF,EAD/C,oBAEVP,MAAK,SAAAU,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASf,EAAkBlB,GAChC,OAAO4B,MAAM,mDAAD,OACyC5B,EADzC,oBAC0D0B,EAD1D,+CAEVP,MAAK,SAAAU,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASC,EAAkBC,GAChC,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC+CT,EAD/C,uDAEVP,MAAK,SAAAU,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASG,EAAUD,GACxB,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACuDT,EADvD,oBAEVP,MAAK,SAAAU,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASI,EAAYF,GAC1B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACuDT,EADvD,2BAEVP,MAAK,SAAAU,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/moviesList/MovieListGeneral.styled.js","components/searchForm/SearchForm.styled.js","components/searchForm/SearchForm.jsx","components/moviesList/SearchedMovielist.jsx","pages/moviesPages/MoviePages.styled.js","pages/moviesPages/MoviesPage.jsx","servises/movie-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 15px;\n  padding-left: 0;\n`;\n\nexport const Field = styled.input`\n  outline: none;\n  border-radius: 2px;\n  margin-right: 5px;\n\n  :hover,\n  :focus {\n    border: 2px solid #2196f3;\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom/dist';\nimport { Field, Form } from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState('');\n\n  const handleChange = evt => {\n    setValue(evt.target.value.trim());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    let searchQuery = evt.target.elements.serchInput.value.trim();\n    if (searchQuery === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n\n    setValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field\n        type=\"text\"\n        name=\"serchInput\"\n        value={value}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List } from './MovieListGeneral.styled';\n\nconst SearchedMovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default SearchedMovieList;\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  padding: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/searchForm/SearchForm';\nimport SearchedMovieList from 'components/moviesList/SearchedMovielist';\nimport { fatchMovieByQuery } from 'servises/movie-service';\nimport { Page } from './MoviePages.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    fatchMovieByQuery(query)\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  return (\n    <Page>\n      <SearchForm />\n      {query && <SearchedMovieList movies={movies} />}\n    </Page>\n  );\n};\n\nexport default MoviesPage;\n","const API_KEY = '3d9b154117ba874dc2e52ba37ff08e6f';\n\nexport function fetchMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fatchMovieByQuery(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=credits,reviews&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchCast(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchReview(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["List","styled","Form","Field","useSearchParams","setSearchParams","useState","value","setValue","onSubmit","evt","preventDefault","searchQuery","target","elements","serchInput","trim","query","type","name","onChange","movies","location","useLocation","map","movie","to","id","state","from","title","Page","setMovies","get","useEffect","fatchMovieByQuery","then","data","results","catch","error","console","log","API_KEY","fetchMovies","fetch","response","ok","Error","status","json","fetchMovieDetails","movieId","fetchCast","fetchReview"],"sourceRoot":""}