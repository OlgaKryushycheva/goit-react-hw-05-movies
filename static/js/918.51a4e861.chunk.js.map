{"version":3,"file":"static/js/918.51a4e861.chunk.js","mappings":"sMAEaA,E,OAAOC,GAAAA,GAAH,0C,SCiBjB,EAhBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,SAAAC,GAAK,aACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,mBACGG,EAAMK,aADT,QACkBL,EAAMM,QAFjBN,EAAME,GADA,KAStB,C,yHCfYK,EAAOZ,EAAAA,GAAAA,KAAH,8DAKJa,EAAQb,EAAAA,GAAAA,MAAH,qJ,SC+BlB,EAlCmB,WACjB,OAA4Bc,EAAAA,EAAAA,MAAnBC,GAAT,eACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OACE,UAACN,EAAD,CAAMO,SAda,SAAAC,GACnBA,EAAIC,iBAEJ,IAAIC,EAAcF,EAAIG,OAAOC,SAASC,WAAWR,MAAMS,OACnC,KAAhBJ,GAIJP,EAAgB,CAAEY,MAAOL,IAEzBJ,EAAS,KALPH,EAAgB,CAAC,EAMpB,EAGC,WACE,SAACF,EAAD,CACEe,KAAK,OACLjB,KAAK,aACLM,MAAOA,EACPY,SAvBe,SAAAT,GACnBF,EAASE,EAAIG,OAAON,MAAMS,OAC3B,KAuBG,mBAAQE,KAAK,SAAb,SAAsB,aAG3B,E,SClCYE,EAAO9B,EAAAA,GAAAA,IAAH,0C,SC4BjB,EAvBmB,WACjB,OAA4BgB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAe8B,EAAf,KACA,GAAuBjB,EAAAA,EAAAA,MACjBa,GADN,eAC2BK,IAAI,SAY/B,OAVAC,EAAAA,EAAAA,YAAU,WACHN,IAELO,EAAAA,EAAAA,IAAkBP,GACfQ,MAAK,SAAAC,GACJL,EAAUK,EAAKC,QAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACZ,KAGF,UAACG,EAAD,YACE,SAAC,EAAD,IACC7B,EAAOyC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAY1C,OAAQA,MAG/C,C,sJC5BD,IAAM2C,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,yDAAD,OAC+CF,EAD/C,oBAEVT,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASjB,EAAkBP,GAChC,OAAOmB,MAAM,mDAAD,OACyCnB,EADzC,oBAC0DiB,EAD1D,+CAEVT,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASC,EAAkBC,GAChC,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC+CT,EAD/C,uDAEVT,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASG,EAAUD,GACxB,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACuDT,EADvD,oBAEVT,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASI,EAAYF,GAC1B,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACuDT,EADvD,2BAEVT,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/moviesList/MoviesList.styled.js","components/moviesList/MoviesList.jsx","components/searchForm/SearchForm.styled.js","components/searchForm/SearchForm.jsx","pages/moviesPages/MoviesPage.styled.js","pages/moviesPages/MoviesPage.jsx","servises/movie-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 15px;\n`;\n","import { Link, useLocation } from 'react-router-dom/dist';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title ?? movie.name}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding: 15px;\n  padding-left: 0;\n`;\n\nexport const Field = styled.input`\n  outline: none;\n  border-radius: 2px;\n  margin-right: 5px;\n\n  :hover,\n  :focus {\n    border: 2px solid #2196f3;\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom/dist';\nimport { Field, Form } from './SearchForm.styled';\n\nconst SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState('');\n\n  const handleChange = evt => {\n    setValue(evt.target.value.trim());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    let searchQuery = evt.target.elements.serchInput.value.trim();\n    if (searchQuery === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n\n    setValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Field\n        type=\"text\"\n        name=\"serchInput\"\n        value={value}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  padding: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/searchForm/SearchForm';\nimport { fatchMovieByQuery } from 'servises/movie-service';\nimport { Page } from './MoviesPage.styled';\nimport MoviesList from 'components/moviesList/MoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    fatchMovieByQuery(query)\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  return (\n    <Page>\n      <SearchForm />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </Page>\n  );\n};\n\nexport default MoviesPage;\n","const API_KEY = '3d9b154117ba874dc2e52ba37ff08e6f';\n\nexport function fetchMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fatchMovieByQuery(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=credits,reviews&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchCast(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchReview(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["List","styled","movies","location","useLocation","map","movie","to","id","state","from","title","name","Form","Field","useSearchParams","setSearchParams","useState","value","setValue","onSubmit","evt","preventDefault","searchQuery","target","elements","serchInput","trim","query","type","onChange","Page","setMovies","get","useEffect","fatchMovieByQuery","then","data","results","catch","error","console","log","length","MoviesList","API_KEY","fetchMovies","fetch","response","ok","Error","status","json","fetchMovieDetails","movieId","fetchCast","fetchReview"],"sourceRoot":""}