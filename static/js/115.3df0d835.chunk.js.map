{"version":3,"file":"static/js/115.3df0d835.chunk.js","mappings":"iPAEaA,EAAOC,EAAAA,GAAAA,GAAH,+CAIJC,EAAOD,EAAAA,GAAAA,GAAH,gD,SCyCjB,EA1Ca,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,IAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUN,GACPO,MAAK,SAAAC,GACJJ,EAAQI,EAAKL,KACd,IACAM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACV,IAECG,EAEL,OAAoB,IAAhBA,EAAKU,QACA,uBAAG,0CAIV,SAAChB,EAAD,UACGM,EAAKW,KAAI,SAAAC,GAAE,aACV,UAAChB,EAAD,YACE,gBACEiB,IACED,EAAGE,aAAH,0CACuCF,EAAGE,cACtC,IAAIC,IAAI,YAEdC,IAAI,OACJC,MAAM,OACNC,OAAO,WAET,uBAAIN,EAAGO,QACP,yBAAG,cAAH,UAAeP,EAAGQ,iBAAlB,QAA+B,UAAU,SAZhCR,EAAGS,GADJ,KAkBjB,C,sJC7CD,IAAMC,EAAU,mCAET,SAASC,IACd,OAAOC,MAAM,yDAAD,OAC+CF,EAD/C,oBAEVlB,MAAK,SAAAqB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASC,EAAkBC,GAChC,OAAOP,MAAM,mDAAD,OACyCO,EADzC,oBAC0DT,EAD1D,+CAEVlB,MAAK,SAAAqB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASG,EAAkBnC,GAChC,OAAO2B,MAAM,sCAAD,OAC4B3B,EAD5B,oBAC+CyB,EAD/C,uDAEVlB,MAAK,SAAAqB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAAS1B,EAAUN,GACxB,OAAO2B,MAAM,sCAAD,OAC4B3B,EAD5B,4BACuDyB,EADvD,oBAEVlB,MAAK,SAAAqB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASI,EAAYpC,GAC1B,OAAO2B,MAAM,sCAAD,OAC4B3B,EAD5B,4BACuDyB,EADvD,2BAEVlB,MAAK,SAAAqB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","servises/movie-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 15px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom/dist';\nimport { fetchCast } from 'servises/movie-service';\nimport { Item, List } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  if (!cast) return;\n\n  if (cast.length === 0) {\n    return <p>We don't have information about cast</p>;\n  }\n\n  return (\n    <List>\n      {cast.map(el => (\n        <Item key={el.id}>\n          <img\n            src={\n              el.profile_path\n                ? `https://image.tmdb.org/t/p/w500/${el.profile_path}`\n                : new URL('../../images/photo-man.webp', import.meta.url)\n            }\n            alt=\"Name\"\n            width=\"75px\"\n            height=\"100px\"\n          />\n          <p>{el.name}</p>\n          <p>Character: {el.character ?? 'unknown'} </p>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '3d9b154117ba874dc2e52ba37ff08e6f';\n\nexport function fetchMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fatchMovieByQuery(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=credits,reviews&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchCast(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchReview(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["List","styled","Item","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","data","catch","error","console","log","length","map","el","src","profile_path","URL","alt","width","height","name","character","id","API_KEY","fetchMovies","fetch","response","ok","Error","status","json","fatchMovieByQuery","query","fetchMovieDetails","fetchReview"],"sourceRoot":""}