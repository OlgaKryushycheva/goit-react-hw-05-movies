{"version":3,"file":"static/js/385.3a698abc.chunk.js","mappings":"qLAEaA,E,OAAOC,GAAAA,GAAH,yC,uICiBjB,EAhBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,UACGF,EAAOG,KAAI,SAAAC,GAAK,aACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,mBACGG,EAAMK,aADT,QACkBL,EAAMM,QAFjBN,EAAME,GADA,KAStB,E,SCfYK,E,OAAOZ,GAAAA,IAAH,0CCwBjB,EArBiB,WACf,OAA4Ba,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJJ,EAAUI,EAAKC,QAChB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,KAGD,UAACT,EAAD,YACE,wBAAI,oBACJ,SAAC,EAAD,CAAYX,OAAQA,MAGzB,C,sJCxBD,IAAMuB,EAAU,mCAET,SAASR,IACd,OAAOS,MAAM,yDAAD,OAC+CD,EAD/C,oBAEVP,MAAK,SAAAS,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASC,EAAkBC,GAChC,OAAOP,MAAM,mDAAD,OACyCO,EADzC,oBAC0DR,EAD1D,+CAEVP,MAAK,SAAAS,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASG,EAAkBC,GAChC,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,oBAC+CV,EAD/C,uDAEVP,MAAK,SAAAS,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASK,EAAUD,GACxB,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACuDV,EADvD,oBAEVP,MAAK,SAAAS,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASM,EAAYF,GAC1B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACuDV,EADvD,2BAEVP,MAAK,SAAAS,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/moviesList/MovieListGeneral.styled.js","components/moviesList/MoviesList.jsx","pages/homePages/HomePage.styled.js","pages/homePages/HomePage.jsx","servises/movie-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 15px;\n`;\n","import { Link, useLocation } from 'react-router-dom/dist';\nimport { List } from './MovieListGeneral.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title ?? movie.name}\n          </Link>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Page = styled.div`\n  padding: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchMovies } from 'servises/movie-service';\nimport MoviesList from 'components/moviesList/MoviesList';\nimport { Page } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies()\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Page>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </Page>\n  );\n};\n\nexport default HomePage;\n","const API_KEY = '3d9b154117ba874dc2e52ba37ff08e6f';\n\nexport function fetchMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fatchMovieByQuery(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchMovieDetails(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=credits,reviews&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchCast(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function fetchReview(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["List","styled","movies","location","useLocation","map","movie","to","id","state","from","title","name","Page","useState","setMovies","useEffect","fetchMovies","then","data","results","catch","error","console","log","API_KEY","fetch","response","ok","Error","status","json","fatchMovieByQuery","query","fetchMovieDetails","movieId","fetchCast","fetchReview"],"sourceRoot":""}